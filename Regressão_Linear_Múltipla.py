# -*- coding: utf-8 -*-
"""Regressão Linear Múltipla.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A87z-SLlln1trY-79Wce4Q4yU2jzObMx

# Regressão Linear Múltipla

Experimento para prever o número de likes em uma postagem com base na reputação do autor, o número de perguntas na postagem e seu número de visualizações.

Fonte: https://www.kaggle.com/umairnsr87/predict-the-number-of-upvotes-a-post-will-get?select=train_NIR5Yl1.csv
"""

import pandas as pd

dados = pd.read_csv("https://raw.githubusercontent.com/VOCruz/Regressao_Linear_Multipla/main/train_NIR5Yl1.csv")

dados.head()

dados.describe()

X = dados.iloc[:, [2,3,5]].values
y = dados.iloc[:,6].values

X_train = X[0:30000]
X_test = X[30000:]

y_train = y[0:30000]
y_test = y[30000:]

"""## Análize de Correlação"""

import matplotlib.pyplot as plt
import seaborn as sns

sns.pairplot(dados)
plt.tight_layout()

dados.corr()

sns.heatmap(dados.corr())

"""## Ajuste"""

from sklearn import linear_model
from sklearn.metrics import mean_squared_error, r2_score

regr = linear_model.LinearRegression()

regr.fit(X_train, y_train)

y_pred = regr.predict(X_test)

print("Mean squared error: %.2f" % mean_squared_error(y_test, y_pred))

print("Variance score: %.2f" % r2_score(y_test, y_pred))

print("Coefficients: \n", regr.coef_)